package wdsr.exercise5.dbclient;

/**
 * Created by Piotr on 2017-05-29.
 */
public enum EDatabaseQueries {
    CREATE_TABLE_STUDENT("CREATE TABLE Student(" +
            "pkey INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY, " +
            "name VARCHAR(30), " +
            "sex VARCHAR(6), " +
            "age INTEGER, " +
            "level INTEGER);"),
    CREATE_TABLE_FACULTY("CREATE TABLE Faculty(" +
            "pkey INT NOT NULL PRIMARY KEY," +
            "name VARCHAR(50) NOT NULL );"),
    CREATE_TABLE_CLASS("CREATE TABLE Class(" +
            "pkey INT NOT NULL PRIMARY KEY," +
            "name VARCHAR(50) NOT NULL," +
            "fkey_faculty INT NOT NULL," +
            "FOREIGN KEY (fkey_faculty) REFERENCES Faculty (pkey));"),
    CREATE_TABLE_ENROLLMENT("CREATE TABLE Enrollment(" +
            "fkey_student INT NOT NULL, " +
            "fkey_class INT NOT NULL, " +
            "FOREIGN KEY (fkey_class) REFERENCES Class (pkey), " +
            "FOREIGN KEY (fkey_student) REFERENCES Student (pkey));"),

    STUDENT_INSERT_1("INSERT INTO Student VALUES(1, 'John Smith', 'male', 23, 2);"),
    STUDENT_INSERT_2("INSERT INTO Student VALUES(2, 'Rebecca Milson', 'female', 27, 3);"),
    STUDENT_INSERT_3("INSERT INTO Student VALUES(3, 'George Heartbreaker', 'male', 19, 1);"),
    STUDENT_INSERT_4("INSERT INTO Student VALUES(4, 'Deepika Chopra', 'female', 25, 3);"),

    FACULTY_INSERT_1("INSERT INTO Faculty VALUES(100, 'Engineering');"),
    FACULTY_INSERT_2("INSERT INTO Faculty VALUES(101, 'Philosophy');"),
    FACULTY_INSERT_3("INSERT INTO Faculty VALUES(102, 'Law and administration');"),
    FACULTY_INSERT_4("INSERT INTO Faculty VALUES(103, 'Languages');"),

    CLASS_INSERT_1("INSERT INTO Class VALUES(1000, 'Introduction to labour law', 102);"),
    CLASS_INSERT_2("INSERT INTO Class VALUES(1001, 'Graph algorithms', 100);"),
    CLASS_INSERT_3("INSERT INTO Class VALUES(1002, 'Existentialism in 20th century', 101);"),
    CLASS_INSERT_4("INSERT INTO Class VALUES(1003, 'English grammar', 103);"),
    CLASS_INSERT_5("INSERT INTO Class VALUES(1004, 'From Plato to Kant', 101);"),

    ENROLLMENT_INSERT_1("INSERT INTO Enrollment VALUES(1, 1000);"),
    ENROLLMENT_INSERT_2("INSERT INTO Enrollment VALUES(1, 1002);"),
    ENROLLMENT_INSERT_3("INSERT INTO Enrollment VALUES(1, 1003);"),
    ENROLLMENT_INSERT_4("INSERT INTO Enrollment VALUES(1, 1004);"),
    ENROLLMENT_INSERT_5("INSERT INTO Enrollment VALUES(2, 1002);"),
    ENROLLMENT_INSERT_6("INSERT INTO Enrollment VALUES(2, 1003);"),
    ENROLLMENT_INSERT_7("INSERT INTO Enrollment VALUES(4, 1000);"),
    ENROLLMENT_INSERT_8("INSERT INTO Enrollment VALUES(4, 1002);"),
    ENROLLMENT_INSERT_9("INSERT INTO Enrollment VALUES(4, 1003);"),

    SELECT_1("SELECT pkey, name FROM Student;"),
    SELECT_2("SELECT s.pkey, s.name " +
            "FROM Student s " +
            "LEFT JOIN Enrollment e ON (s.pkey=e.fkey_student) " +
            "WHERE e.fkey_student is null;"),
    SELECT_3("SELECT s.pkey, s.name " +
            "FROM Student s " +
            "LEFT JOIN Enrollment e ON (s.pkey=e.fkey_student) " +
            "JOIN Class c ON (e.fkey_class=c.pkey)  " +
            "WHERE s.sex = 'female' and c.name = 'Existentialism in 20th century';"),
    SELECT_4("SELECT f.name " +
            "FROM Class c " +
            " JOIN Faculty f ON c.fkey_faculty = f.pkey " +
            "where c.pkey not in (SELECT fkey_class "  +
            "                   FROM ENROLLMENT);"),
    SELECT_5("SELECT MAX(s.age) maxAge " +
            "FROM Student s " +
            "JOIN Enrollment e ON (s.pkey=e.fkey_student) " +
            "JOIN Class c ON (e.fkey_class=c.pkey) " +
            "WHERE c.name='Introduction to labour law';"),
    SELECT_6("SELECT c.name, COUNT(e.fkey_student) NUMBER_OF_STUDENTS " +
            "FROM Enrollment e " +
            "JOIN Class c ON (e.fkey_class=c.pkey)" +
            "GROUP BY c.name " +
            "HAVING COUNT(e.fkey_student)>1;"),
    SELECT_7("SELECT level, AVG(age) average" +
            " FROM Student " +
            "GROUP BY level;");
    private String query;
    EDatabaseQueries(String query) {
        this.query = query;
        }
    public String getQuery() {
        return query;
    }
}
